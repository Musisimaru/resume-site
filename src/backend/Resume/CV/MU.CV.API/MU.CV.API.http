### ───
### Переменные
### ───
@MU.CV.API_HostAddress = http://localhost:5021
@apiVersion = 1.0

# Keycloak
@kc = http://localhost:9090
@realm = resume-realm
@clientId = resume-api
@clientSecret = oNwoLQdvJAvRcL89SydqCWCe5ry1jMgq
@username = user1
@password = password123

# Если у вас есть авторизация — положите сюда JWT:
@token = {{token}}

# Идентификаторы для примеров
@noteId    = 00000000-0000-0000-0000-000000000000
@newNoteId = 11111111-1111-1111-1111-111111111111

# @name login
POST {{kc}}/realms/{{realm}}/protocol/openid-connect/token
Content-Type: application/x-www-form-urlencoded

grant_type=password&client_id={{clientId}}&username={{username}}&password={{password}}&scope=openid

> {%
    const data = JSON.parse(response.body);
    client.global.set("access_token", data.access_token);
    client.global.set("refresh_token", data.refresh_token);
    client.log("access_token saved (password grant)");
%}

### Если используешь password-грант, можно перезаписать access_token так:
### @access_token = {{login.response.body.$.access_token}}

###

GET {{MU.CV.API_HostAddress}}/weatherforecast/
Accept: application/json

###

### ────────────────────────────────
### Получить все заметки пользователя
### ────────────────────────────────
GET {{MU.CV.API_HostAddress}}/api/notes
Accept: application/json
Authorization: Bearer {{token}}
Api-Version: {{apiVersion}}

### ────────────────────────────────
### Получить заметку по Id
### ────────────────────────────────
GET {{MU.CV.API_HostAddress}}/api/notes/{{noteId}}
Accept: application/json
Authorization: Bearer {{token}}
Api-Version: {{apiVersion}}

### ────────────────────────────────
### Создать заметку
### (в вашем API Create принимает Note, поэтому передаём полный объект)
### ────────────────────────────────
POST {{MU.CV.API_HostAddress}}/api/notes
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{token}}
Api-Version: {{apiVersion}}

{
  "id": "{{newNoteId}}",
  "title": "New note title",
  "content": "New note content"
}

### ────────────────────────────────
### Обновить заметку
### (Update принимает Note, поэтому также отправляем всё целиком)
### ────────────────────────────────
PUT {{MU.CV.API_HostAddress}}/api/notes
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{token}}
Api-Version: {{apiVersion}}

{
  "id": "{{newNoteId}}",
  "title": "Updated note title",
  "content": "Updated content"
}

### ────────────────────────────────
### Удалить заметку
### (У вас MapDelete("/") без сегмента Id, а метод принимает Guid noteId —
### значит Id передаём как query-параметр)
### ────────────────────────────────
DELETE {{MU.CV.API_HostAddress}}/api/notes/?noteId={{newNoteId}}
Accept: application/json
Authorization: Bearer {{token}}
Api-Version: {{apiVersion}}

### Liveness (только теги "live")
GET {{MU.CV.API_HostAddress}}/alive

### Full health
GET {{MU.CV.API_HostAddress}}/health